# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

schedules:
- cron: "0 14 * * *"
  displayName: Daily 2PM build
  branches:
    include:
    - azure-pipelines  # or any other branch you want to trigger on
  always: true

trigger:
- none  # Disables CI trigger

pr:
- none  # Disables PR trigger

pool:
  name: QualityAutomation-Build-Agents
  vmImage: ubuntu-latest

variables:
  - group: GiftCard
  - group: AppSecrets

jobs:
- job: ECOM_Regression_Suite
  timeoutInMinutes: 360
  
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '20'
    displayName: 'Install Node.js'

  - script: npm ci
    displayName: 'npm ci'
  - script: npx playwright install --with-deps
    displayName: 'Install Playwright browsers'
  - script: npm run sfcc:qa:regression
    displayName: 'Run Regression tests'
    env:
      CI: 'true'
      GIFTCARD_NUMBER: $(GiftcardNumber)
      GIFTCARD_PIN: $(GiftcardPin)
      USER_PASSWORD: $(UserPassword)
      BM_PASSWORD: $(BMpassword)
      PAYPAL_PASSWORD: $(PaypalPassword)
      TESTRAIL_USERNAME: $(TestRailUserName)
      TESTRAIL_API_KEY: $(TestRailPassword)
      OMS_TEST_RUN_ID: $(OMS_TEST_RUN_ID)
      SFCC_TEST_RUN_ID: $(SFCC_TEST_RUN_ID) 

  - task: PublishTestResults@2
    displayName: 'Publish test results'
    inputs:
      searchFolder: 'test-results'
      testResultsFormat: 'JUnit'
      testResultsFiles: 'e2e-junit-results.xml'
      mergeTestResults: true
      failTaskOnFailedTests: true
      testRunTitle: 'ECOM Regression DEV'
    condition: succeededOrFailed()
    
  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: playwright-report
      artifact: playwright-report
      publishLocation: 'pipeline'
    condition: succeededOrFailed()

